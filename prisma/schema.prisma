generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_WITH_SCHEMA")
}

model Cask {
  id                Int            @id @default(autoincrement())
  title             String         @unique(map: "unique_cask_title") @db.VarChar
  createdAt         DateTime?      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt         DateTime?      @default(now()) @map("updated_at") @db.Timestamp(6)
  name              String?        @db.VarChar
  description       String?
  url               String?        @db.VarChar
  homepage          String?        @db.VarChar
  install30         Int?
  install90         Int?
  install365        Int?
  cask_has_category CaskCategory[]
  cask_image        CaskImage[]
  cask_names        cask_names[]   @relation("caskTocask_names")

  @@map("cask")
}

model CaskCategory {
  title      String?   @db.VarChar
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)
  upvotes    Int       @default(0)
  caskId     Int       @map("cask_id")
  categoryId Int       @map("category_id")
  cask       Cask      @relation(fields: [caskId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk6szp4qten0wa7f315y_8")
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fka99h41vi2jr2vbf9azq9")

  @@id([categoryId, caskId])
  @@map("cask_has_category")
}

model CaskImage {
  id        Int       @id @default(autoincrement())
  title     String?   @db.VarChar
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)
  type      String?
  url       String    @db.VarChar
  upvotes   Int       @default(0)
  caskId    Int?      @map("cask_id")
  cask      Cask?     @relation(fields: [caskId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkirhzcdrd09_44gnm1g46")

  @@map("cask_image")
}

model Category {
  id                Int            @id @default(autoincrement())
  title             String         @db.VarChar
  createdAt         DateTime?      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt         DateTime?      @default(now()) @map("updated_at") @db.Timestamp(6)
  cask_has_category CaskCategory[]

  @@map("category")
}

model nc_evolutions {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  titleDown   String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  batch       Int?
  checksum    String?   @db.VarChar(255)
  status      Int?
  created     DateTime? @db.Timestamptz(6)
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
}

model cask_names {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  cask_id    Int
  cask_title String    @db.VarChar
  cask       Cask      @relation("caskTocask_names", fields: [cask_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_mosyfji8vcjmuiwhvqc")

  @@unique([title, cask_title], map: "unique_cask_names_title")
}
